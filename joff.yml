---
- hosts: localhost
  connection: local

  vars:
    - superlimic_config_repo: https://github.com/joffotron/superlumic-config.git
    - user_name: joff
    - computername: jeb
    - home_dir: "/Users/{{ user_name }}/"
    - user_email: joff@joff.codes
    - github_user_name: joffotron
    - git_user_name: Joseph Miller
    - git_user_email: "{{ user_email }}"
    - git_signing_key: 24D68F57
    - apple_id_email: joff@googlehax.com
    - src_dir: "{{ home_dir }}/src/"
    - settings_export_dir: "{{ home_dir }}/tmp/SettingsExports"
    # Set these in secrets file:
    # github_auth_token
    # apple_id_password

  vars_files:
    - vars/osx_defaults.yml
    - vars/nodejs.yml
    - vars/sublime_text_packages.yml
    - vars/{{ user_name }}-secrets.yml

  roles:
    - { role: profile-all, tags: base }
    - { role: profile-developer, tags: base-dev }
    - { role: docker, tags: docker }
    - { role: sublimetext3, tags: sublime }
    - { role: roderik.superlumic-postgresql, tags: postgres }
    - { role: roderik.superlumic-node, tags: nodejs }
    - { role: ruby, tags: ruby }
    - { role: python, tags: python }
    - { role: golang, tags: golang }
    - { role: elixir, tags: elixir }
    - { role: profile-raisebook-dev, tags: raisebook }

  tasks:
    - name: install personal cask applications
      homebrew_cask: name={{item}} state=present
      with_items:
        - istat-menus
        - dropbox
        - xee
        - bartender
        - chicken
        - alfred
        - bettertouchtool
        - tresorit
        - skitch
        - gitkraken
        - monodraw
        - flux
        - datagrip
        - rubymine
        - intellij-idea
        - radiant-player
        - sonos
        - spotify
        - libreoffice
        - viscosity
        - hosts
        - veracrypt

    - name: Create local bin dir
      file: path="{{ home_dir }}/bin" state=directory

    - name: Copy local 'binaries'
      copy: src=files/joff/bin/
            dest="{{ home_dir }}/bin/"

    - name: Powerline Shell Prompt
      git: repo=git@github.com:joffotron/powerline-shell.git
           dest="{{ home_dir }}/bin/powerline-shell"
           version="master"

    - name: Run install for powerline shell prompt
      command: "python install.py"
      args:
        chdir: "{{ home_dir }}/bin/powerline-shell/"

    - name: homebrew taps
      homebrew_tap: tap={{ item }} state=present
      with_items:
        - homebrew/fuse
        - Caskroom/cask

    - name: install personal brew applications
      homebrew: name={{item}} state=latest
      with_items:
        - mas
        - certbot
        - z
        - ipcalc
        - jq
        - moreutils
        - packer
        - pidof
        - s3cmd
        - exercism

    - name: "[App Store] Sign out of the Mac App Store"
      command: mas signout

    - name: "[App Store] Sign in to the Mac App Store"
      command: mas signin {{ apple_id_email }} "{{ apple_id_password }}"

    - name: "[App Store] See which apps are already installed"
      command: bash -c "mas list | cut -f 1 -d ' '"
      register: mas_list

    - name: "[App Store] Install Mac App Store applications"
      command: mas install {{ item.id }}
      when: item.id not in mas_list.stdout_lines
      with_items:
        - { id: "587512244", name: "Kaleidoscope" }
        - { id: "427515976", name: "3Hub" }
        - { id: "419330170", name: "Moom" }
        - { id: "410628904", name: "Wunderlist" }
        - { id: "824183456", name: "Affinity Photo" }
        - { id: "824171161", name: "Affinity Designer" }
        - { id: "557168941", name: "Tweetbot" }
        - { id: "957734279", name: "Toggl Desktop" }
        - { id: "975937182", name: "Fantastical 2" }
        - { id: "495152161", name: "Wizard Stats" }

    - name: Install Python pip packages
      pip: state=present name="{{ item }}"
      with_items:
        - awslogs
        - wharfee
        - yamllint

    - name: create .ssh directory
      file:
        path: "{{ home_dir }}/.ssh/"
        state: directory
        mode: 0700

    - name: personal ssh config
      copy:
        src: files/ssh_config
        dest: "{{ home_dir }}/.ssh/ssh_config"

    - name: Create SettingsExports dir
      file: path={{ settings_export_dir }} state=directory

    - name: Copy Jetbrains Settings Files
      copy: src="{{ user_name }}/{{ item }}" dest="{{ settings_export_dir }}/{{ item }}"
      with_items:
        - RubyMine-settings.jar
        - IntelliJ-settings.jar
        - DataGrip-settings.jar
        - iStatMenusSettings.ismp
        - BetterTouchTool.settings
        - com.manytricks.Moom.plist
        - osx-keybindings.plist
        - alfred-toggl.alfredworkflow

    - name: Activate the Toggl Alfred workflow
      command: open "{{ settings_export_dir }}/alfred-toggl.alfredworkflow"
               creates="{{ home_dir }}/.toggl-workflow-created"

    - name: killall cfprefsd so we can copy prefs
      command: killall cfprefsd

    - name: OSX Keyboard shortcuts
      command: defaults import com.apple.symbolichotkeys {{ settings_export_dir }}/osx-keybindings.plist
      tags: osxshortcuts

    - name: Kill Moom
      command: kill `pidof Moom`
      ignore_errors: true

    - name: Copy moom config
      copy: src=joff/com.manytricks.Moom.plist dest="{{ home_dir }}/Library/Preferences/com.manytricks.Moom.plist"

    - name: Start Moom again
      command: open /Applications/Moom.app

    - name: Check stat of .gnupg dir
      stat: path={{ home_dir }}/.gnupg
      register: gnupg_dir_stat

    - name: Remove .gnupg dir if it exists
      file: path={{ home_dir }}/.gnupg
            state=absent
      when: gnupg_dir_stat.stat.exists == True and gnupg_dir_stat.stat.islnk == False

    - name: Link GPG directory from Tresors
      file: path={{ home_dir }}/.gnupg
            src={{ home_dir }}/Tresors/TheCrypt/GPG/gnupg
            mode=0600
            state=link

    - name: Download custom fonts
      get_url: url=https://github.com/tonsky/FiraCode/releases/download/1.102/FiraCode_1.102.zip
               dest="{{ home_dir }}/tmp"

    - name: Install fonts
      unarchive: src="{{ home_dir }}/tmp/FiraCode_1.102.zip"
                 dest="{{ home_dir }}/Library/Fonts/"

    - name: Create vim plugin dir
      file: path="{{ home_dir }}/.vim/plugin" state=directory

    - name: Install GPGVim plugin
      get_url: url=https://raw.githubusercontent.com/jamessan/vim-gnupg/master/plugin/gnupg.vim
               dest="{{ home_dir }}/.vim/plugin/gnupg.vim"

    - name: "Ensure ~/Applications dir"
      file: path="{{ home_dir }}/Applications" state=directory

    - name: Download Lock-On-USB tool
      git: repo=https://github.com/nfirvine/osx-lock-on-remove-usb.git
           dest="{{ home_dir }}/Applications/osx-lock-on-remove-usb"
           update=no

    - name: Install Lock-On-USB tool for Yubikey
      command: install.sh {{item.vendor_id}} {{item.product_id}}
      with_items:
        - {vendor_id: 1050, product_id: 0116}
